! This is a template to run TRACMASS with atmopsheric trajectories.
! 1.) Copy the entire folder template_ifs and rename it as you wish. 
! 2.) Set PROJECT = to this new name in the Makfile in the directory highest up in this unix tree
! 3.) Download test data to run with from https://www.dropbox.com/sh/fxt4zwnfaps0l28/AAA1H-1mNFqc6oN5dEzCQgoFa?dl=0
! 4.) Place this file in a directory named "2018" and change "physDataDir" to the name of the directory above the directory "2018"
! 5.) Download the model levels from https://www.dropbox.com/s/sqpy05p5xjcztz1/model_60lev.txt?dl=0
! 6.) Set "topoDataDir" to the directory where you store this model level file
! 7.) Set "outDataDir" to where you want to store your data from the TRACMASS run

&INIT_NAMELIST_VERSION
	gridvernum    =      6,								! grid version number, used to distinguish grids in setupgrid 
/
&INIT_GRID_DESCRIPTION
	gcmname        = 'EraInterim',						! name of GCM            
	gcmsource      = 'https://www.ecmwf.int/',			! website for GCM
	gridname 		= '',								! name of grid
	gridsource     = 'https://www.ecmwf.int/',			! website for grid
	griddesc       = '',								! short description of grid
	! Describe filenames
	topoDataDir = '/Users/doos/Dropbox/Public/tracmass_data/ifs/',  ! directory of grid data
	RunID       = 'era',								! name of GCM simulation
	physDataDir = '/Users/doos/Dropbox/Public/tracmass_data/ifs/',   ! directory of physical data (u,v,T,S,MLD,etc)
!	physDataDir = '/Users/doos/Dropbox/data_dropbox/ifs/eranc/',   ! directory of physical data (u,v,T,S,MLD,etc)
	fileSuffix  = '.nc',								! suffix of files, e.g. ".nc"
	! Logicals to control what to read etc.
	useTrmClock = .false.,								! use sophisticated clock (otherwise simple clock)
/
&INIT_CASE_DESCRIPTION
	casename       = 'era',								! short name of the TRACMASS run
	casedesc       = 'Test',							! short description of the TRACMASS run
/
&INIT_GRID_SIZE
	! Size of global grid
	imt            = 480,								! number of global i points
	jmt            = 240,								! number of global j points
	km             = 60,								! number of global k points
	nst            = 2,									! number of time levels to use (should be = 2)
	! Only read subregion of the global data
	subgrid        = 0,									! only read part of the grid if > 0
	subgridimin    = 10,								! i start point of region
	subgridimax    = 100,								! i end point of region
	subgridjmin    = 10,								! j start point of region
	subgridjmax    = 100,								! j end point of region
	subgridfile    = 'templ.asc',						! or read region indices from file
	subgridid      = 0,									! number for this region
	nperio         = 1,									! control periodic boundary conditions
    													! > 0 periodic in x
														! = 4 North fold for ORCA2, 025, 0083
														! = 6 North fold for ORCA1
	zgridFile      = 'model_60lev.txt'					! file with dz etc.
/
&INIT_BASE_TIME
	basesec        = 0,									! base time and date for trmClock
	basemin        = 0,
	basehour       = 0,
	baseday        = 1,
	basemon        = 1,
	baseyear       = 1900,
	jdoffset       = 4,									! trmClock offset in juliandays
/
&INIT_GRID_TIME
	fieldsperfile  = 1,
	ngcm_step      = 6,									! time between two time levels
														! if ncgcm_unit = 5, then ngcm = 3 means 3 months
	ngcm_unit      = 3,									! units of ngcm 
														! 1 = seconds
														! 2 = minutes
														! 3 = hours
														! 4 = days
														! 5 = months
														! 6 = years
     
	iter           = 6,			     					! number of time steps between two GCM fields
	intmax         = 10460,								! max iterations before trajectory is 
														! stopped with infiniteError
	minveljd 		= -1,								!
	maxveljd 		= -1,								!
/
&INIT_START_DATE
	startsec       = 0,									! start time
	startmin       = 0,
	starthour      = 6,
	startday       = 1,									! start date
	startmon       = 1,
	startyear      = 2018,
	noleap         = .false.,							! dont use leap years? 
	startjd        = -1,								! first julianday for trmClock
	intmin         = 1,									!
/
&INIT_RUN_TIME
     ! Loop run 
	loopYears      = .true.,							! make a time loop to run 
														! e.g. 1000 years using only 100 years of data
	loopStartYear  = 2017,								! year to start loop from
	loopEndYear    = 2018,								! last year of loop
     
	intspin        = 1,									! number of time steps for seeding
	intrun         = 99999,		    					! number of time steps for run (always=2)
	log_level      = 2,									! level of verbosity 
														! = 0 minimal output to stdout
														! = 1 low verbosity
														! = 2 medium verbosity
/
&INIT_WRITE_TRAJS
	twritetype     =  1,								! how to write time 
														! = 1 write float time variable
														! = 2 write julianday
														! > 2 write time step
															
	kriva          = 6,									! 0 = no writing
														! 1 = write at time intervals of gcm datasets (each ints)
														! 2 = write at each time iteration
														! 3 = write all the time
														! 4 = write only start and end positions
														! 5 = write at chosen intervals
														! 6 = write each spatial grid-crossing
	outDataDir     = '/Users/doos/data/ifs/data_out/',	! directory for output
!	outdatafile    = 'ifs_test_iter6000',		    	! fileprefix for output
	outdatafile    = 'ifs_walker_air_anal_west',					! fileprefix for output
	outdircase     = .false. ,							! creates a new directory to store the data from the run      
	intminInOutFile  =  0,								! 0 = ????
														! 1 = ????
														! 2 = 
														! 3 = 
	intpsi		   = 100,								! frequency of writing the stream functions
	outdirdate     = .false. ,							! creates a new directory to store the data from the run
/
&INIT_SEEDING
	nff			   = 1,								! = 1 run forward trajectories
														! = -1 run backwards
	isec           = 3,									! = 1 start on zonal cell wall 
														! = 2 start on meridional cell wall
														! = 3 start on vertical wall
														! = 4 start in center of cell
	idir           = -1,									! = 1 start only when flux > 0 (eastward/northward) 
														! = -1      only when flux < 0 (westward/southward)
														! = 0 start at flux < 0 or > 0 (both directions) not working ???
	nqua           = 1,									! number of trajectories can be set by     
														! = 1 constant number of particles in all seeding cells
														!     set by partQuant (particles / gridcell)
														! = 2 Each particle reflects mass transport at seeding. 
														!     set by partQuant (m3/s or kg/s per particle)
														! = 3 Each particle reflects air/water mass/volume at seeding.
														!     set by partQuant in m3 or kg per particle
														! = 5  particles set by seedfile (Set: isec==5)
	partQuant      = 1,									! particles/gridcell or m3s-1/particle or m3/particle
	ntracmax       = 12345678,							! max number of trajectories (set as big as possible)
	loneparticle   = 0,									! follow only this trajectory for debugging. If = 0 then all trajectories
	seedtype       = 1,									! = 1 seed by using ist,jst,kst (below)
														! = 2 seed by using list file with start positions
														! = 3 seed by using a 2-D mask file.
							     
	! Use the parameters below when seedtype = 1
	ist1           = 241,				     			! seed in box in range i = [ist1,ist2]
	ist2           = 241,				     			! 	       	      	   j = [jst1,jst2]
	jst1           = 81,	    		     			! 			           k = [kst1,kst2]
	jst2           = 161,			     
	kst1           = 59,    
	kst2           = 59,    
	tst1           = -1,								! seed only between tst1 and tst2
	tst2           = -1,								! given as 19800105 for 1980-01-05
     
	! Use the parameters below when seedtype = 2
	seeddir        = '',								! directory for seed files
	seedfile       = '',								! name of seed file
	varseedfile    = 0,									! = 1 read seedfile , = 0 use ist1,ist2,jst1,...
	seedtime       = 0,									! seed only for specific times
	seedall        = 0,									! seed all particles or only one
	seedpos        = 1,									! 
	seedparts      = 0,									!
	seedpart_id	   = 0,									!
/
&INIT_KILLZONES
	nend 		   = 2,									! number of ways to kill a trajectory (in this case time + one region)
	ienw 		   = 241,									! west indices of killzones
	iene           = 241, 								! east indices of killzones
	jens           =  0, 								! south indices of killzones
	jenn           = 999,  								! north indices of killzones
	timax          = 365.0, 							! time limit for traj [days]
		
!	nend           =  5,                                ! Exasmples with 4 spatial killing zones  + one time
!	ienw           = -1, 2402,   -1,   -1,				! west indices of killzones
!	iene           =  2, 3000, 3000, 3000,				! east indices of killzones
!	jens           =  1,    1,    1, 1481,				! south indices of killzones
!	jenn           = 2000, 2000,    2, 2000,			! north indices of killzones
!	timax          = 30.,								! time limit for traj [days]
/
&INIT_TEMP_SALT
     ! Start or end trajectories in tracer intervals; T stands for Dry static energy and S for Latent heat
	tmin0 		   = -9999.0,							! start only if T >= tmin0
	tmax0   	   =  9999.0,							! ---- " ----   T <= tmax0   
	smin0          = -9999.0,							! ---- " ----   S >= smin0
	smax0          =  9999.0,							!               S <= smax0
	rmin0          = -9999.0,							! 		   rho >= rmin0
	rmax0          =  9999.0,							!  	   rho <= rmax0
	tmine          = -9999.0,							! kill traj  if T <  tmine
	tmaxe          =  9999.0,							! ---- " -----  T >  tmaxe
	smine          = -9999.0,							!               S <  smine
	smaxe          =  9999.0,
	rmine          = -9999.0,
	rmaxe          =  9999.0,
/
&INIT_TRACERS
     n2Dtracers           = 0                                ! number of 2D tracers to read
     names2Dtracers(1)    = ''                               ! names of 2D tracers
     n3Dtracers           = 3                                ! number of 3D tracers to read
     names3Dtracers(1:2)  = '',''                            ! names of 3D tracers
     src3Dtracers(1:3)    = 'read',    'read', 'calculate'   ! source of 3D tracers
     desc3Dtracers(1:3)   = 'atm_temperature','specific_humidity','atm_pressure' 
/
&INIT_DIFFUSION
	ah             = 2000.0,							! sub-grid parametersiation horizontal diffusion
	av             =    0.0,							!                           vertical
/
&INIT_SEDIMENT											! coefficients for adding a sedimentation velocity and resuspension
	partdiam       =  0.001,
	rhos           = 2620.0,
	cwamp          =   20.0,
	twave          =    8.0,
	critvel        =    0.1,
/
