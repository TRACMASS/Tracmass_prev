! This is a template to run TRACMASS with ROMS.
! 1.) Copy the entire folder template_ifs and rename it as you wish. 
! 2.) Set PROJECT = to this new name in the Makfile in the directory highest up in this unix tree
! 3.) Download test data to run with from https://www.dropbox.com/s/t6ha6iat0p0mof4/roms_avg.nc?dl=0
! 4.) Place this file in a directory named "roms_avg.nc" and change "physDataDir" to the name of the directory 
! 5.) Download the model bathymetry from https://www.dropbox.com/s/0v5u0roehhdztpw/roms_grd.nc?dl=0
! 6.) Set "topoDataDir" to the directory where you store this model level file
! 7.) Set "outDataDir" to where you want to store your data from the TRACMASS run

&INIT_NAMELIST_VERSION
	gridvernum    =      6,								! grid version number, used to distinguish grids in setupgrid 
/
&INIT_GRID_DESCRIPTION 
     gcmname        = 'ROMS',							! name of GCM            
     gcmsource      = 'http://www.myroms.org/',     	! website for GCM
     gridname       = '',                           	! name of grid
     gridsource     = 'http://www.myroms.org/',    		! website for grid
     griddesc       = '',                    			! short description of grid
     ! Describe filenames
     topoDataDir    = '/Users/doos/Dropbox/Public/roms/',  	! directory of grid data
     RunID          = 'roms_avg.nc',						! name of GCM simulation
     physDataDir    = '/Users/doos/Dropbox/Public/roms/',  	! directory of physical data (u,v,T,S,MLD,etc)
     physPrefixForm = '.nc'                      		! format of filenames for physical data
     bioDataDir     = '',                               ! directory of biogeochemistry data 
     bioPrefixForm  = '',                               ! format of filenames for BGC data
     tGridName      = '',                               ! name of Tgrid, e.g. grid_T
     uGridName      = '',                               ! name of Ugrid
     vGridName      = '',                               ! name of Vgrid
     fileSuffix     = '.nc',                            ! suffix of files, e.g. ".nc"
     ! Describe variable names
     ssh_name       = 'zeta',                           ! name of SSH
     ueul_name      = 'u',                            	! name of resolved zonal velocity
     veul_name      = 'v',								! ---- " -------   meridional 
     usgs_name      = '',                            	! name of sub-grid zonal velocity, e.g. GM 
     vsgs_name      = '',                            	! ---- " -------   meridional 
     temp_name      = 'temp',                          	! name of temperature
     salt_name      = 'salt',                           ! name of salinity
     ! Logicals to control what to read etc.	
     oneStepPerFile = .false.,                          ! only one time level per file?
     readMean       = .false.,                          ! read stored time mean velocities
     readTS         = .true.,                           ! read temperature and salinity
     vvl            = .true.,                           ! variable volume layer?
     readBio        = .false.,                          ! read biogeochemistry fields
     readSSH        = .true.,                           ! read SSH (necessary for vvl)
     sgsUV          = .true.,                           ! read sub-grid velocities, e.g GM. for ORCA1
     useTrmClock    = .false.,                          ! use sophisticated clock (otherwise simple clock)
/
&INIT_CASE_DESCRIPTION
     casename       = 'ROMS',                           ! short name of the TRACMASS run
     casedesc       = 'Test',                           ! short description of the TRACMASS run
/
&INIT_GRID_SIZE
     ! Size of global grid
     imt            = 301,                              ! number of global i points
     jmt            = 250,                              ! number of global j points
     km             = 42,                               ! number of global k points
     nst            = 2,                                ! number of time levels to use (should be = 2)
     ! Only read subregion of the global data
     subgrid        = 0,                                ! only read part of the grid if > 0
     subgridimin    = 10,                               ! i start point of region
     subgridimax    = 100,                              ! i end point of region
     subgridjmin    = 10,                               ! j start point of region
     subgridjmax    = 100,                              ! j end point of region
     subgridfile    = 'templ.asc',                      ! or read region indices from file
     subgridid      = 0,                                ! number for this region
     
     nperio         = 0,                                ! control periodic boundary conditions
                                                        ! > 0 periodic in x
                                                        ! = 4 North fold for ORCA2, 025, 0083
                                                        ! = 6 North fold for ORCA1
     coordFile      = 'roms_grd.nc'                     ! file with lons,lats
     hgridFile      = ''                                ! file with dx, dy etc
     zgridFile      = ''                                ! file with dz etc.
     bathyFile      = ''                                ! file with bathymetry in model levels
     dx_name        = ''                                ! name of dx at T point
     dy_name        = ''                                !         dy at T point
     dxv_name       = 'pm'                              !         dx at V point
     dyu_name       = 'pn'                              !         dy at U point
     dz_1D_name     = ''                                ! name of 1D dz array at T point
     dzt_3D_name    = ''                                ! name of 3D dz at T point
     dzu_3D_name    = ''                                ! --- " ---  dz at U point
     dzv_3D_name    = ''                                ! --- " ---  dz at V point
     kBathy_name    = ''                          		! name of bathymetry in model levels
     gridIsUpsideDown = .true.                          ! flip vertical grid?
     read3Ddz       = .true.                            ! read 3D dz for T,U,V points?
/
&INIT_BASE_TIME
     basesec        = 0,                                ! base time and date for trmClock
     basemin        = 0,
     basehour       = 0,
     baseday        = 1,
     basemon        = 1,
     baseyear       = 1900,
     jdoffset       = 4,                                ! trmClock offset in juliandays
/
&INIT_GRID_TIME
     fieldsperfile  = 12,
     ngcm_step      = 1,                                ! time between two time levels
                                                        ! if ncgcm_unit = 5, then ngcm = 3 means 3 months
     ngcm_unit      = 5,                                ! units of ngcm 
                                                        ! 1 = seconds
                                                        ! 2 = minutes
                    					   				! 3 = hours
							     						! 4 = days
							    						! 5 = months
							     						! 6 = years
     
     iter           = 10,                               ! number of time steps between two GCM time levels
     intmax         = 12,                               ! max iterations before trajectory is 
                                                        ! stopped with infiniteError
     minveljd       = 1,                                !
     maxveljd       = 120,                              !
/
&INIT_START_DATE
     startsec       = 0,                                ! start time
     startmin       = 0,
     starthour      = 0,
     startday       = 1,                                ! start date
     startmon       = 2,
     startyear      = 2000,
     noleap         = .true.,                           ! dont use leap years? 
     startjd        = -1,                               ! first julianday for trmClock
     intmin         = 1,                                !
/
&INIT_RUN_TIME
     ! Loop run 
     loopYears      = .true.,				     		! make a time loop to run 
     		      					     				! e.g. 1000 years using only 100 years of data
     loopStartYear  = 2000,				     			! year to start loop from
     loopEndYear    = 2001,				     			! last year of loop
     
     intspin        = 1,                                ! number of time steps for seeding
     intrun         = 120,                              ! number of time steps for run
     log_level      = 2,				     			! level of verbosity 
     		      					     				! = 0 minimal output to stdout
							     						! = 1 low verbosity
							     						! = 2 medium verbosity
/
&INIT_WRITE_TRAJS
	twritetype     =  1,								! how to write time 
														! = 1 write float time variable
														! = 2 write julianday
														! > 2 write time step
  							     						! = 2 write julianday
							     						! > 2 write time step
     kriva          = 6,		 						! 0 = no writing
             	      	         						! 1 = write at time intervals of gcm datasets (each ints)
        						 						! 2 = write at each time iteration
							     						! 3 = write all the time
  							     						! 4 = write only start and end positions
  							     						! 5 = write at chosen intervals
  							     						! 6 = write each spatial grid-crossing
     outdatadir     = '/Users/doos/data/roms/data_out/',! directory for output
     outdatafile    = 'test',			     			! fileprefix for output
	 outdircase     = .false. ,							! creates a new directory to store the data from the run      
     intmininoutfile= 0,				     			!
     intpsi         = 100, 								! frequency of writing the stream functions
	 outdirdate     = .false. ,							! creates a new directory to store the data from the run
/
&INIT_SEEDING
	nff			   = 1,									! = 1 run forward trajectories
     		      					     				! = -1 run backwards
    isec           = 2,				     				! = 1 start on zonal cell wall 
     		      					     				! = 2 start on meridional cell wall
							     						! = 3 start on vertical wall
							     						! = 4 start in center of cell
    idir           = -1,				     			! = 1 start only when flux > 0
     		      					     				! = -1      only when flux < 0 
							     						! = 0 start at flux < 0 or > 0 but this option is not working
	nqua           = 1,									! number of trajectories can be set by     
														! = 1 constant number of particles in all seeding cells
														!     set by partQuant (particles / gridcell)
														! = 2 Each particle reflects mass transport at seeding. 
														!     set by partQuant (m3/s or kg/s per particle)
														! = 3 Each particle reflects air/water mass/volume at seeding.
														!     set by partQuant in m3 or kg per particle
														! = 5  particles set by seedfile (Set: isec==5)
    partquant      = 1,                       			! particles/gridcell or m3s-1/particle or m3/particle
    ntracmax       = 20000000,			             	! max number of trajectories
    loneparticle   = 0, 				     			! start only one trajectory for debugging
	seedtype       = 1,									! = 1 seed by using ist,jst,kst (below)
														! = 2 seed by using list file with start positions
														! = 3 seed by using a 2-D mask file.
	! Use the parameters below when seedtype = 1
    ist1           = 150,				     			! seed in box in range i = [ist1,ist2]
    ist2           = 250,				     			! 	       	      	    j = [jst1,jst2]
    jst1           = 190,				     			! 			    		k = [kst1,kst2]
    jst2           = 200,				     
    kst1           = 40,
    kst2           = 40,
    tst1           = -1,				     			! seed only between tst1 and tst2
    tst2           = -1,				     			! given as 19800105 for 1980-01-05
     
	! Use the parameters below when seedtype = 2
	seeddir        = '',								! directory for seed files
	seedfile       = '',								! name of seed file
	varseedfile    = 0,									! = 1 read seedfile , = 0 use ist1,ist2,jst1,...
	seedtime       = 0,									! seed only for specific times
	seedall        = 0,									! seed all particles or only one
	seedpos        = 1,									! 
	seedparts      = 0,									!
	seedpart_id	   = 0,									!
/
&INIT_KILLZONES

     nend           = 5,                                ! number of ways to kill a traj
     ienw           =   -1, 2402,   -1,   -1,		    ! west indices of killzones
     iene           =    2, 3000, 3000, 3000,		    ! east indices of killzones
     jens           =    1,    1,    1, 1481,		    ! south indices of killzones
     jenn           = 2000, 2000,    2, 2000,		    ! north indices of killzones
     timax          = 3650000.0,     			     	! time limit for traj [days]
/
&INIT_TEMP_SALT
     ! Start or end trajectories in tracer intervals
     tmin0          =  -50.0,                           ! start only if T >= tmin0
     tmax0          =  400.0,				     		! ---- " ----   T <= tmax0      
     smin0          = -500.0,				     		! ---- " ----   S >= smin0
     smax0          =  400.0,				     		!               S <= smax0
     rmin0          = -100.0,				     		! 		   rho >= rmin0
     rmax0          =  500.0,				     		!  	   rho <= rmax0
     tmine          =  -50.0,				     		! kill traj  if T <  tmine
     tmaxe          =  400.0,				     		! ---- " -----  T >  tmaxe
     smine          = -150.0,				     		!               S <  smine
     smaxe          =  500.0,				     		! 		     S >  smaxe
     rmine          = -100.0,				     		! 		   rho <  rmine
     rmaxe          =  500.0,				     		!		   rho >  rmaxe
/
&INIT_TRACERS
     n2Dtracers           = 1                        	! number of 2D tracers to read
     names2Dtracers(1)    = ''                       	! names of 2D tracers
     n3Dtracers           = 2                                ! number of 3D tracers to read
     names3Dtracers(1:2)  = '',''            			! names of 3D tracers
/
&INIT_DIFFUSION
     ! Add diffusion (random walk) to trajectories
     ah             = 0.0,				     			! horizontal diffusivity
     av             = 0.0,				     			! vertical diffusivity
/
&INIT_SEDIMENT
     ! For sedimentation parametrization (not maintained anymore)
     partdiam       = 0.001,		      		     
     rhos           = 2620.0,				     
     cwamp          = 20.0,				     
     twave          = 8.0,				     
     critvel        = 0.1,				     
/
